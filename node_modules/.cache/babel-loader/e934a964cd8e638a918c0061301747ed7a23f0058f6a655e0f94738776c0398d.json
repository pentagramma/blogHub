{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\famou\\\\Downloads\\\\Arnifi\\\\frontend\\\\src\\\\pages\\\\Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BlogCard from '../components/BlogCard';\nimport api from '../utils/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blogs() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [category, setCategory] = useState('');\n  const [author, setAuthor] = useState('');\n  const [debouncedAuthor, setDebouncedAuthor] = useState('');\n  const categories = ['Career', 'Finance', 'Travel', 'Technology', 'Health', 'Other'];\n\n  // Debounce author input\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedAuthor(author);\n    }, 1100); // 2 seconds\n\n    return () => {\n      clearTimeout(handler); // clear timeout on cleanup or new keystroke\n    };\n  }, [author]);\n\n  // Fetch blogs when category or debounced author changes\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const params = {};\n        if (category) params.category = category;\n        if (debouncedAuthor) params.author = debouncedAuthor;\n        const res = await api.get('/blogs', {\n          params\n        });\n        setBlogs(res.data.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch blogs');\n      }\n    };\n    fetchBlogs();\n  }, [category, debouncedAuthor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"All Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        className: \"p-2 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        placeholder: \"Filter by author\",\n        className: \"p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(BlogCard, {\n        blog: blog,\n        isMyBlog: false\n      }, blog._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Blogs, \"5FEKwBxQSLzMjgvpd0Ie/Y24BP4=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","BlogCard","api","toast","jsxDEV","_jsxDEV","Blogs","_s","blogs","setBlogs","category","setCategory","author","setAuthor","debouncedAuthor","setDebouncedAuthor","categories","handler","setTimeout","clearTimeout","fetchBlogs","params","res","get","data","err","_err$response","_err$response$data","error","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","cat","type","placeholder","blog","isMyBlog","_id","_c","$RefreshReg$"],"sources":["C:/Users/famou/Downloads/Arnifi/frontend/src/pages/Blogs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BlogCard from '../components/BlogCard';\r\nimport api from '../utils/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Blogs() {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [category, setCategory] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [debouncedAuthor, setDebouncedAuthor] = useState('');\r\n\r\n  const categories = ['Career', 'Finance', 'Travel', 'Technology', 'Health', 'Other'];\r\n\r\n  // Debounce author input\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedAuthor(author);\r\n    }, 1100); // 2 seconds\r\n\r\n    return () => {\r\n      clearTimeout(handler); // clear timeout on cleanup or new keystroke\r\n    };\r\n  }, [author]);\r\n\r\n  // Fetch blogs when category or debounced author changes\r\n  useEffect(() => {\r\n    const fetchBlogs = async () => {\r\n      try {\r\n        const params = {};\r\n        if (category) params.category = category;\r\n        if (debouncedAuthor) params.author = debouncedAuthor;\r\n        const res = await api.get('/blogs', { params });\r\n        setBlogs(res.data.data);\r\n      } catch (err) {\r\n        toast.error(err.response?.data?.message || 'Failed to fetch blogs');\r\n      }\r\n    };\r\n\r\n    fetchBlogs();\r\n  }, [category, debouncedAuthor]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">All Blogs</h2>\r\n      <div className=\"mb-4 flex space-x-4\">\r\n        <select\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          className=\"p-2 border rounded\"\r\n        >\r\n          <option value=\"\">All Categories</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat} value={cat}>{cat}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n          placeholder=\"Filter by author\"\r\n          className=\"p-2 border rounded\"\r\n        />\r\n      </div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {blogs.map((blog) => (\r\n          <BlogCard key={blog._id} blog={blog} isMyBlog={false} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blogs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}